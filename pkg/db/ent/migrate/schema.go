// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CompensatesColumns holds the columns for the "compensates" table.
	CompensatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "start", Type: field.TypeUint32},
		{Name: "end", Type: field.TypeUint32},
		{Name: "message", Type: field.TypeString},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// CompensatesTable holds the schema information for the "compensates" table.
	CompensatesTable = &schema.Table{
		Name:       "compensates",
		Columns:    CompensatesColumns,
		PrimaryKey: []*schema.Column{CompensatesColumns[0]},
	}
	// GasPayingsColumns holds the columns for the "gas_payings" table.
	GasPayingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "fee_type_id", Type: field.TypeUUID},
		{Name: "payment_id", Type: field.TypeUUID},
		{Name: "duration_minutes", Type: field.TypeUint32},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// GasPayingsTable holds the schema information for the "gas_payings" table.
	GasPayingsTable = &schema.Table{
		Name:       "gas_payings",
		Columns:    GasPayingsColumns,
		PrimaryKey: []*schema.Column{GasPayingsColumns[0]},
	}
	// GoodPayingsColumns holds the columns for the "good_payings" table.
	GoodPayingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Unique: true},
		{Name: "payment_id", Type: field.TypeUUID},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// GoodPayingsTable holds the schema information for the "good_payings" table.
	GoodPayingsTable = &schema.Table{
		Name:       "good_payings",
		Columns:    GoodPayingsColumns,
		PrimaryKey: []*schema.Column{GoodPayingsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "good_id", Type: field.TypeUUID},
		{Name: "app_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "parent_order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "pay_with_parent", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "units", Type: field.TypeUint32},
		{Name: "promotion_id", Type: field.TypeUUID},
		{Name: "discount_coupon_id", Type: field.TypeUUID},
		{Name: "user_special_reduction_id", Type: field.TypeUUID},
		{Name: "start", Type: field.TypeUint32},
		{Name: "end", Type: field.TypeUint32},
		{Name: "coupon_id", Type: field.TypeUUID},
		{Name: "order_type", Type: field.TypeString, Default: "normal"},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
	}
	// OutOfGasColumns holds the columns for the "out_of_gas" table.
	OutOfGasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "start", Type: field.TypeUint32},
		{Name: "end", Type: field.TypeUint32},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// OutOfGasTable holds the schema information for the "out_of_gas" table.
	OutOfGasTable = &schema.Table{
		Name:       "out_of_gas",
		Columns:    OutOfGasColumns,
		PrimaryKey: []*schema.Column{OutOfGasColumns[0]},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "good_id", Type: field.TypeUUID},
		{Name: "order_id", Type: field.TypeUUID, Unique: true},
		{Name: "account_id", Type: field.TypeUUID},
		{Name: "start_amount", Type: field.TypeUint64},
		{Name: "amount", Type: field.TypeUint64},
		{Name: "pay_with_balance_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "finish_amount", Type: field.TypeUint64},
		{Name: "coin_usd_currency", Type: field.TypeUint64},
		{Name: "local_coin_usd_currency", Type: field.TypeUint64},
		{Name: "live_coin_usd_currency", Type: field.TypeUint64},
		{Name: "coin_info_id", Type: field.TypeUUID},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"wait", "done", "canceled", "timeout"}},
		{Name: "chain_transaction_id", Type: field.TypeString},
		{Name: "platform_transaction_id", Type: field.TypeUUID},
		{Name: "user_set_paid", Type: field.TypeBool, Default: false},
		{Name: "user_set_canceled", Type: field.TypeBool, Default: false},
		{Name: "user_payment_txid", Type: field.TypeString, Default: ""},
		{Name: "fake_payment", Type: field.TypeBool, Default: false},
		{Name: "create_at", Type: field.TypeUint32},
		{Name: "update_at", Type: field.TypeUint32},
		{Name: "delete_at", Type: field.TypeUint32},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CompensatesTable,
		GasPayingsTable,
		GoodPayingsTable,
		OrdersTable,
		OutOfGasTable,
		PaymentsTable,
	}
)

func init() {
}
